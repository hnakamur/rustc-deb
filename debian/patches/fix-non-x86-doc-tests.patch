Description: doc/book: fix tests for non-x86 architectures, such as aarch64
 `rustdoc --test` gets confused when "main" exists for some architectures but not others.
Author: Ximin Luo <infinity0@pwned.gg>
Bug: https://github.com/rust-lang/rust/pull/34889
Applied-Upstream: commit:27e766d7bc84be992c8ddef710affc92ef4a0adf
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/src/doc/book/inline-assembly.md
+++ b/src/doc/book/inline-assembly.md
@@ -60,6 +60,8 @@
     : "{eax}"
    );
 # } }
+# #[cfg(not(any(target_arch = "x86", target_arch = "x86_64")))]
+# fn main() {}
 ```
 
 Whitespace also doesn't matter:
@@ -70,6 +72,8 @@
 # fn main() { unsafe {
 asm!("xor %eax, %eax" ::: "{eax}");
 # } }
+# #[cfg(not(any(target_arch = "x86", target_arch = "x86_64")))]
+# fn main() {}
 ```
 
 ## Operands
@@ -129,6 +133,8 @@
 // Put the value 0x200 in eax
 asm!("mov $$0x200, %eax" : /* no outputs */ : /* no inputs */ : "{eax}");
 # } }
+# #[cfg(not(any(target_arch = "x86", target_arch = "x86_64")))]
+# fn main() {}
 ```
 
 Input and output registers need not be listed since that information
@@ -164,6 +170,8 @@
 }
 println!("eax is currently {}", result);
 # }
+# #[cfg(not(any(target_arch = "x86", target_arch = "x86_64")))]
+# fn main() {}
 ```
 
 ## More Information
