Description: Don't download SHA256 if it's already available locally
 In Debian we provide the stage0 tarballs as a separate component so that the
 buildds don't need to access the network during the build.
Author: Ximin Luo <infinity0@debian.org>
Forwarded: not-needed
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/src/bootstrap/bootstrap.py
+++ b/src/bootstrap/bootstrap.py
@@ -19,15 +19,17 @@
 import tempfile
 
 
-def get(url, path, verbose=False):
+def get(url, path, verbose=False, use_local_hash_if_present=False):
     sha_url = url + ".sha256"
     with tempfile.NamedTemporaryFile(delete=False) as temp_file:
         temp_path = temp_file.name
-    with tempfile.NamedTemporaryFile(suffix=".sha256", delete=False) as sha_file:
-        sha_path = sha_file.name
+    sha_path = path + ".sha256"
 
     try:
-        download(sha_path, sha_url, verbose)
+        if use_local_hash_if_present and os.path.exists(sha_path):
+            print("using already-download file " + sha_path)
+        else:
+            download(sha_path, sha_url, verbose)
         if os.path.exists(path):
             try:
                 verify(path, sha_path, verbose)
@@ -41,7 +43,6 @@
         print("moving " + temp_path + " to " + path)
         shutil.move(temp_path, path)
     finally:
-        delete_if_present(sha_path)
         delete_if_present(temp_path)
 
 
--- a/src/etc/get-stage0.py
+++ b/src/etc/get-stage0.py
@@ -35,7 +35,7 @@
     filename = filename_base + '.tar.gz'
     url = 'https://static.rust-lang.org/dist/' + date + '/' + filename
     dst = dl_dir + '/' + filename
-    bootstrap.get(url, dst)
+    bootstrap.get(url, dst, use_local_hash_if_present=True)
 
     stage0_dst = triple + '/stage0'
     if os.path.exists(stage0_dst):
