#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# When using sudo pbuilder, this will cause mk/install.mk to run sudo,
# but we don't need sudo as a build-dep for the package if we unexport
# the SUDO_USER variable.
unexport SUDO_USER

RUST_VERSION := $(shell dpkg-parsechangelog | egrep '^Version:' | cut -f 2 -d ' ' | cut -f 1 -d '-' | cut -f 1-2 -d .)
RUST_PREFIX := usr/lib/$(DEB_HOST_MULTIARCH)/rust/$(RUST_VERSION)
DEB_DESTDIR := $(CURDIR)/debian/rust
RUST_TMP_PREFIX := $(DEB_DESTDIR)/$(RUST_PREFIX)

# These are the normal build flags
COMMON_FLAGS = \
               --disable-manage-submodules \
               --mandir=/usr/share/man \
               --prefix=/$(RUST_PREFIX)

# TODO
# These flags will be used to avoid external
# stage0 bootstrap binaries
SELF_BOOTSTRAP = \
		 --enable-local-rust \
		 --local-rust-root=/usr

# TODO
# These flags will enable the system-wide LLVM
SYSTEM_LLVM = --llvm-root=/usr

%:
	dh $@ --parallel

# Note: SHELL is not set by dash, but the configure script wants to use it
override_dh_auto_configure:
	mkdir -p $(CURDIR)/dl
	cp $(CURDIR)/debian/dl/*.tar.bz2 $(CURDIR)/dl
	SHELL=/bin/sh \
	    ./configure \
		    $(COMMON_FLAGS) \
		    # TODO
		    # $(SELF_BOOTSTRAP) 
		    # $(SYSTEM_LLVM)

# Skip test since it fails on rust 0.12
override_dh_auto_test:
	true

override_dh_shlibdeps:
	LD_LIBRARY_PATH=$(RUST_TMP_PREFIX)/lib:$(LD_LIBRARY_PATH) \
		dh_shlibdeps -l$(RUST_TMP_PREFIX)/lib

override_dh_auto_install:
	dh_auto_install
	dh_link $(RUST_PREFIX)/bin/rustc usr/bin/rustc-$(RUST_VERSION)
	dh_link usr/bin/rustc-$(RUST_VERSION) usr/bin/rustc
	dh_link usr/share/man/man1/rustc.1 usr/share/man/man1/rustc-$(RUST_VERSION).1
	dh_link $(RUST_PREFIX)/bin/rustdoc usr/bin/rustdoc-$(RUST_VERSION)
	dh_link usr/bin/rustdoc-$(RUST_VERSION) usr/bin/rustdoc
	dh_link usr/share/man/man1/rustdoc.1 usr/share/man/man1/rustdoc-$(RUST_VERSION).1
